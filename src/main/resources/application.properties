# The following 3 'spring.datasource' properties are set by the class AlmaDataSourceConfiguration 
# using info from archiveConfig.properties
#spring.datasource.url=[archive.relational.connection]
#spring.datasource.username=[archive.relational.user]
#spring.datasource.password=[archive.relational.passwd]
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

### test and validation for connection
spring.datasource.test-on-borrow=true
spring.datasource.validation-query=select 1 from dual

### Settings of Connection pool
spring.datasource.max-active=20
spring.datasource.max-idle=10
spring.datasource.min-idle=5
spring.datasource.initial-size=5

## Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.max-wait=10000

spring.profiles.active = production

# Configure logging defaults; re-define these
# properties on the command line to change them
logging.file.name = server.log
logging.file.path = .

logging.level.org.aqua =
# Let's log Hibernate queries, including prepared statement parameters
logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR

# Properties server.port and server.contextPath are used to build
# the URL that can be used to reach the server:
# http://hostname:<server.port>/<server.contextPath>/...
# They are only applicable to the embedded Tomcat/Jetty server
server.port = 10000
server.servlet.contextPath=/aqua-qa0

# TO-DO: Configure the server for SSL: see 
# http://docs.spring.io/spring-boot/docs/current/reference/html/howto-embedded-servlet-containers.html#howto-configure-ssl# http://docs.spring.io/spring-boot/docs/current/reference/html/howto-embedded-servlet-containers.html
# server.ssl.key-store = ...
# server.ssl.key-store-password = ...
# server.ssl.key-password = ...
